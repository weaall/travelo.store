name: Build and Push to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # 1. 소스 코드 checkout
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Docker Compose 설치
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # 3. AWS CLI 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 

    # 4. ECR 로그인
    - name: Login to Amazon ECR
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

    # 5. Docker Compose로 client와 server 빌드
    - name: Build client and server
      run: |
        docker-compose -f docker-compose.yml -f docker-compose.override.yml build client server

    # 6. Docker 이미지에 태그 추가
    - name: Tag Docker images
      run: |
        IMAGE_URI="public.ecr.aws/e7u1o0y0/weaall/travelo"
        docker tag travelostore_client "${IMAGE_URI}:client-latest"
        docker tag travelostore_server "${IMAGE_URI}:server-latest"

    # 7. ECR에 Docker 이미지 푸시
    - name: Push Docker images to Amazon ECR
      run: |
        IMAGE_URI="public.ecr.aws/e7u1o0y0/weaall/travelo"
        docker push "${IMAGE_URI}:client-latest"
        docker push "${IMAGE_URI}:server-latest"

    # 8. ECS 태스크 정의 업데이트
    - name: Register new ECS task definition
      id: task-def
      run: |
        FAMILY="travelo-task"
        CONTAINER_DEFINITIONS=$(cat <<EOF
        [
          {
            "name": "client",
            "image": "public.ecr.aws/e7u1o0y0/weaall/travelo:client-latest",
            "memory": 512,
            "cpu": 256,
            "essential": true
          },
          {
            "name": "server",
            "image": "public.ecr.aws/e7u1o0y0/weaall/travelo:server-latest",
            "memory": 512,
            "cpu": 256,
            "essential": true
          }
        ]
        EOF
        )
        echo "{\"family\": \"${FAMILY}\", \"containerDefinitions\": ${CONTAINER_DEFINITIONS}}" > task-def.json
        aws ecs register-task-definition --cli-input-json file://task-def.json > task-def-output.json
        TASK_REVISION=$(jq -r '.taskDefinition.taskDefinitionArn' < task-def-output.json)
        echo "task-revision=${TASK_REVISION}" >> $GITHUB_ENV

    # 9. ECS 서비스 업데이트
    - name: Update ECS service
      run: |
        SERVICE_NAME="${{ env.ECS_SERVICE_NAME }}"
        CLUSTER_NAME="${{ env.ECS_CLUSTER_NAME }}"
        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition ${{ env.task-revision }}
        aws ecs wait services-stable --cluster $CLUSTER_NAME --services $SERVICE_NAME

